from .models import BluetoothServiceInfoBleak as BluetoothServiceInfoBleak
from .storage import BluetoothStorage as BluetoothStorage
from bluetooth_adapters import AdapterDetails as AdapterDetails, BluetoothAdapters as BluetoothAdapters
from homeassistant.core import HomeAssistant as HomeAssistant, callback as callback
from homeassistant.exceptions import HomeAssistantError as HomeAssistantError

class InvalidConfigEntryID(HomeAssistantError): ...
class InvalidSource(HomeAssistantError): ...

@callback
def async_load_history_from_system(adapters: BluetoothAdapters, storage: BluetoothStorage) -> tuple[dict[str, BluetoothServiceInfoBleak], dict[str, BluetoothServiceInfoBleak]]: ...
@callback
def adapter_title(adapter: str, details: AdapterDetails) -> str: ...
def config_entry_id_to_source(hass: HomeAssistant, config_entry_id: str) -> str: ...
