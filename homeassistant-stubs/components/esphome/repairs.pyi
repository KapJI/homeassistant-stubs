from .manager import async_replace_device as async_replace_device
from _typeshed import Incomplete
from homeassistant import data_entry_flow as data_entry_flow
from homeassistant.components.repairs import RepairsFlow as RepairsFlow
from homeassistant.core import HomeAssistant as HomeAssistant, callback as callback

class ESPHomeRepair(RepairsFlow):
    _data: Incomplete
    def __init__(self, data: dict[str, str | int | float | None] | None) -> None: ...
    @callback
    def _async_get_placeholders(self) -> dict[str, str]: ...

class DeviceConflictRepair(ESPHomeRepair):
    @property
    def entry_id(self) -> str: ...
    @property
    def mac(self) -> str: ...
    @property
    def stored_mac(self) -> str: ...
    async def async_step_init(self, user_input: dict[str, str] | None = None) -> data_entry_flow.FlowResult: ...
    async def async_step_migrate(self, user_input: dict[str, str] | None = None) -> data_entry_flow.FlowResult: ...
    async def async_step_manual(self, user_input: dict[str, str] | None = None) -> data_entry_flow.FlowResult: ...

async def async_create_fix_flow(hass: HomeAssistant, issue_id: str, data: dict[str, str | int | float | None] | None) -> RepairsFlow: ...
