from .const import DOMAIN as DOMAIN, LOGGER as LOGGER
from collections.abc import Callable as Callable
from homeassistant.config_entries import ConfigFlow as ConfigFlow, ConfigFlowResult as ConfigFlowResult
from homeassistant.const import CONF_API_KEY as CONF_API_KEY
from homeassistant.data_entry_flow import AbortFlow as AbortFlow, FlowResultType as FlowResultType
from homeassistant.helpers.issue_registry import IssueSeverity as IssueSeverity, async_create_issue as async_create_issue
from typing import Any

class HydrawiseConfigFlow(ConfigFlow, domain=DOMAIN):
    VERSION: int
    async def _create_entry(self, api_key: str, *, on_failure: Callable[[str], ConfigFlowResult]) -> ConfigFlowResult: ...
    def _import_issue(self, error_type: str) -> ConfigFlowResult: ...
    def _deprecated_yaml_issue(self) -> None: ...
    async def async_step_user(self, user_input: dict[str, Any] | None = None) -> ConfigFlowResult: ...
    def _show_form(self, error_type: str | None = None) -> ConfigFlowResult: ...
    async def async_step_import(self, import_data: dict[str, Any]) -> ConfigFlowResult: ...
