from .const import DOMAIN as DOMAIN
from .knx_entity import KnxEntity as KnxEntity
from homeassistant.components.weather import WeatherEntity as WeatherEntity
from homeassistant.const import TEMP_CELSIUS as TEMP_CELSIUS
from homeassistant.core import HomeAssistant as HomeAssistant
from homeassistant.helpers.entity import Entity as Entity
from homeassistant.helpers.typing import ConfigType as ConfigType, DiscoveryInfoType as DiscoveryInfoType
from typing import Any, Callable, Iterable
from xknx.devices import Weather as XknxWeather

async def async_setup_platform(hass: HomeAssistant, config: ConfigType, async_add_entities: Callable[[Iterable[Entity]], None], discovery_info: Union[DiscoveryInfoType, None]=...) -> None: ...

class KNXWeather(KnxEntity, WeatherEntity):
    _device: Any
    def __init__(self, device: XknxWeather) -> None: ...
    @property
    def temperature(self) -> Union[float, None]: ...
    @property
    def temperature_unit(self) -> str: ...
    @property
    def pressure(self) -> Union[float, None]: ...
    @property
    def condition(self) -> str: ...
    @property
    def humidity(self) -> Union[float, None]: ...
    @property
    def wind_bearing(self) -> Union[int, None]: ...
    @property
    def wind_speed(self) -> Union[float, None]: ...
