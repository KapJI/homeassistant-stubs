from .const import DOMAIN as DOMAIN
from .coordinator import mcp_client as mcp_client
from _typeshed import Incomplete
from homeassistant.config_entries import ConfigFlow as ConfigFlow, ConfigFlowResult as ConfigFlowResult
from homeassistant.const import CONF_URL as CONF_URL
from homeassistant.core import HomeAssistant as HomeAssistant
from homeassistant.exceptions import HomeAssistantError as HomeAssistantError
from typing import Any

_LOGGER: Incomplete
STEP_USER_DATA_SCHEMA: Incomplete

async def validate_input(hass: HomeAssistant, data: dict[str, Any]) -> dict[str, Any]: ...

class ModelContextProtocolConfigFlow(ConfigFlow, domain=DOMAIN):
    VERSION: int
    async def async_step_user(self, user_input: dict[str, Any] | None = None) -> ConfigFlowResult: ...

class InvalidUrl(HomeAssistantError): ...
class CannotConnect(HomeAssistantError): ...
class TimeoutConnectError(HomeAssistantError): ...
class InvalidAuth(HomeAssistantError): ...
class MissingCapabilities(HomeAssistantError): ...
