from .const import DEFAULT_NAME as DEFAULT_NAME, DOMAIN as DOMAIN
from _typeshed import Incomplete
from homeassistant.components import media_source as media_source
from homeassistant.components.media_player import BrowseError as BrowseError, BrowseMedia as BrowseMedia, MediaClass as MediaClass, MediaType as MediaType
from homeassistant.core import HomeAssistant as HomeAssistant
from music_assistant_client import MusicAssistantClient as MusicAssistantClient
from music_assistant_models.media_items import MediaItemType as MediaItemType
from typing import Any

MEDIA_TYPE_RADIO: str
PLAYABLE_MEDIA_TYPES: Incomplete
LIBRARY_ARTISTS: str
LIBRARY_ALBUMS: str
LIBRARY_TRACKS: str
LIBRARY_PLAYLISTS: str
LIBRARY_RADIO: str
LIBRARY_TITLE_MAP: Incomplete
LIBRARY_MEDIA_CLASS_MAP: Incomplete
MEDIA_CONTENT_TYPE_FLAC: str
THUMB_SIZE: int

def media_source_filter(item: BrowseMedia) -> bool: ...
async def async_browse_media(hass: HomeAssistant, mass: MusicAssistantClient, media_content_id: str | None, media_content_type: str | None) -> BrowseMedia: ...
async def build_main_listing(hass: HomeAssistant) -> BrowseMedia: ...
async def build_playlists_listing(mass: MusicAssistantClient) -> BrowseMedia: ...
async def build_playlist_items_listing(mass: MusicAssistantClient, identifier: str) -> BrowseMedia: ...
async def build_artists_listing(mass: MusicAssistantClient) -> BrowseMedia: ...
async def build_artist_items_listing(mass: MusicAssistantClient, identifier: str) -> BrowseMedia: ...
async def build_albums_listing(mass: MusicAssistantClient) -> BrowseMedia: ...
async def build_album_items_listing(mass: MusicAssistantClient, identifier: str) -> BrowseMedia: ...
async def build_tracks_listing(mass: MusicAssistantClient) -> BrowseMedia: ...
async def build_radio_listing(mass: MusicAssistantClient) -> BrowseMedia: ...
def build_item(mass: MusicAssistantClient, item: MediaItemType, can_expand: bool = True, media_class: Any = None) -> BrowseMedia: ...
