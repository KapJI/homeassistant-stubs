from . import NAMDataUpdateCoordinator as NAMDataUpdateCoordinator
from .const import AIR_QUALITY_SENSORS as AIR_QUALITY_SENSORS, ATTR_MHZ14A_CARBON_DIOXIDE as ATTR_MHZ14A_CARBON_DIOXIDE, DEFAULT_NAME as DEFAULT_NAME, DOMAIN as DOMAIN, SUFFIX_P1 as SUFFIX_P1, SUFFIX_P2 as SUFFIX_P2
from homeassistant.components.air_quality import AirQualityEntity as AirQualityEntity
from homeassistant.config_entries import ConfigEntry as ConfigEntry
from homeassistant.core import HomeAssistant as HomeAssistant
from homeassistant.helpers.entity import DeviceInfo as DeviceInfo
from homeassistant.helpers.entity_platform import AddEntitiesCallback as AddEntitiesCallback
from homeassistant.helpers.typing import StateType as StateType
from homeassistant.helpers.update_coordinator import CoordinatorEntity as CoordinatorEntity
from typing import Any

PARALLEL_UPDATES: int

async def async_setup_entry(hass: HomeAssistant, entry: ConfigEntry, async_add_entities: AddEntitiesCallback) -> None: ...

class NAMAirQuality(CoordinatorEntity, AirQualityEntity):
    coordinator: NAMDataUpdateCoordinator
    sensor_type: Any = ...
    def __init__(self, coordinator: NAMDataUpdateCoordinator, sensor_type: str) -> None: ...
    @property
    def name(self) -> str: ...
    @property
    def particulate_matter_2_5(self) -> StateType: ...
    @property
    def particulate_matter_10(self) -> StateType: ...
    @property
    def carbon_dioxide(self) -> StateType: ...
    @property
    def unique_id(self) -> str: ...
    @property
    def device_info(self) -> DeviceInfo: ...
    @property
    def available(self) -> bool: ...

def round_state(state: StateType) -> StateType: ...
