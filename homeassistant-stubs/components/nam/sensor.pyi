from . import NAMDataUpdateCoordinator as NAMDataUpdateCoordinator
from .const import ATTR_ENABLED as ATTR_ENABLED, ATTR_LABEL as ATTR_LABEL, ATTR_UNIT as ATTR_UNIT, ATTR_UPTIME as ATTR_UPTIME, DOMAIN as DOMAIN, SENSORS as SENSORS
from homeassistant.components.sensor import ATTR_STATE_CLASS as ATTR_STATE_CLASS, SensorEntity as SensorEntity
from homeassistant.config_entries import ConfigEntry as ConfigEntry
from homeassistant.const import ATTR_DEVICE_CLASS as ATTR_DEVICE_CLASS, ATTR_ICON as ATTR_ICON
from homeassistant.core import HomeAssistant as HomeAssistant
from homeassistant.helpers.entity import DeviceInfo as DeviceInfo
from homeassistant.helpers.entity_platform import AddEntitiesCallback as AddEntitiesCallback
from homeassistant.helpers.update_coordinator import CoordinatorEntity as CoordinatorEntity
from homeassistant.util.dt import utcnow as utcnow
from typing import Any

PARALLEL_UPDATES: int

async def async_setup_entry(hass: HomeAssistant, entry: ConfigEntry, async_add_entities: AddEntitiesCallback) -> None: ...

class NAMSensor(CoordinatorEntity, SensorEntity):
    coordinator: NAMDataUpdateCoordinator
    sensor_type: Any = ...
    _description: Any = ...
    _attr_state_class: Any = ...
    def __init__(self, coordinator: NAMDataUpdateCoordinator, sensor_type: str) -> None: ...
    @property
    def name(self) -> str: ...
    @property
    def state(self) -> Any: ...
    @property
    def unit_of_measurement(self) -> Union[str, None]: ...
    @property
    def device_class(self) -> Union[str, None]: ...
    @property
    def icon(self) -> Union[str, None]: ...
    @property
    def entity_registry_enabled_default(self) -> bool: ...
    @property
    def unique_id(self) -> str: ...
    @property
    def device_info(self) -> DeviceInfo: ...
    @property
    def available(self) -> bool: ...

class NAMSensorUptime(NAMSensor):
    @property
    def state(self) -> str: ...
