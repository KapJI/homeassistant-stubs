from .const import CONF_MOUNT_DIR as CONF_MOUNT_DIR, CONF_TYPE_OWSERVER as CONF_TYPE_OWSERVER, CONF_TYPE_SYSBUS as CONF_TYPE_SYSBUS, DEFAULT_OWSERVER_HOST as DEFAULT_OWSERVER_HOST, DEFAULT_OWSERVER_PORT as DEFAULT_OWSERVER_PORT, DEFAULT_SYSBUS_MOUNT_DIR as DEFAULT_SYSBUS_MOUNT_DIR, DEVICE_SUPPORT_OPTIONS as DEVICE_SUPPORT_OPTIONS, DOMAIN as DOMAIN, INPUT_ENTRY_CLEAR_OPTIONS as INPUT_ENTRY_CLEAR_OPTIONS, INPUT_ENTRY_DEVICE_SELECTION as INPUT_ENTRY_DEVICE_SELECTION, OPTION_ENTRY_DEVICE_OPTIONS as OPTION_ENTRY_DEVICE_OPTIONS, OPTION_ENTRY_SENSOR_PRECISION as OPTION_ENTRY_SENSOR_PRECISION, PRECISION_MAPPING_FAMILY_28 as PRECISION_MAPPING_FAMILY_28
from .model import OWServerDeviceDescription as OWServerDeviceDescription
from .onewirehub import CannotConnect as CannotConnect, InvalidPath as InvalidPath, OneWireHub as OneWireHub
from _typeshed import Incomplete
from homeassistant.config_entries import ConfigEntry as ConfigEntry, ConfigFlow as ConfigFlow, OptionsFlow as OptionsFlow
from homeassistant.const import CONF_HOST as CONF_HOST, CONF_PORT as CONF_PORT, CONF_TYPE as CONF_TYPE
from homeassistant.core import HomeAssistant as HomeAssistant, callback as callback
from homeassistant.data_entry_flow import FlowResult as FlowResult
from homeassistant.helpers.device_registry import DeviceRegistry as DeviceRegistry
from typing import Any

DATA_SCHEMA_USER: Incomplete
DATA_SCHEMA_OWSERVER: Incomplete
DATA_SCHEMA_MOUNTDIR: Incomplete

async def validate_input_owserver(hass: HomeAssistant, data: dict[str, Any]) -> dict[str, str]: ...
async def validate_input_mount_dir(hass: HomeAssistant, data: dict[str, Any]) -> dict[str, str]: ...

class OneWireFlowHandler(ConfigFlow):
    VERSION: int
    onewire_config: Incomplete
    def __init__(self) -> None: ...
    async def async_step_user(self, user_input: Union[dict[str, Any], None] = ...) -> FlowResult: ...
    async def async_step_owserver(self, user_input: Union[dict[str, Any], None] = ...) -> FlowResult: ...
    async def async_step_mount_dir(self, user_input: Union[dict[str, Any], None] = ...) -> FlowResult: ...
    @staticmethod
    def async_get_options_flow(config_entry: ConfigEntry) -> OptionsFlow: ...

class OnewireOptionsFlowHandler(OptionsFlow):
    entry_id: Incomplete
    options: Incomplete
    configurable_devices: Incomplete
    devices_to_configure: Incomplete
    current_device: str
    def __init__(self, config_entry: ConfigEntry) -> None: ...
    async def async_step_init(self, user_input: Union[dict[str, Any], None] = ...) -> FlowResult: ...
    async def async_step_device_selection(self, user_input: Union[dict[str, Any], None] = ...) -> FlowResult: ...
    async def async_step_configure_device(self, user_input: Union[dict[str, Any], None] = ...) -> FlowResult: ...
    async def _update_options(self) -> FlowResult: ...
    @staticmethod
    def _get_device_long_name(device_registry: DeviceRegistry, current_device: str) -> str: ...
    def _get_current_configured_sensors(self) -> list[str]: ...
    def _get_current_setting(self, device_id: str, setting: str, default: Any) -> Any: ...
    def _update_device_options(self, user_input: dict[str, Any]) -> None: ...
