from collections.abc import Mapping
from homeassistant.components.cover import ATTR_TILT_POSITION as ATTR_TILT_POSITION, CoverEntity as CoverEntity, SUPPORT_CLOSE_TILT as SUPPORT_CLOSE_TILT, SUPPORT_OPEN_TILT as SUPPORT_OPEN_TILT, SUPPORT_SET_TILT_POSITION as SUPPORT_SET_TILT_POSITION, SUPPORT_STOP_TILT as SUPPORT_STOP_TILT
from homeassistant.components.overkiz.entity import OverkizEntity as OverkizEntity
from pyoverkiz.enums import OverkizCommand
from typing import Any

ATTR_OBSTRUCTION_DETECTED: str
COMMANDS_STOP: list[OverkizCommand]
COMMANDS_STOP_TILT: list[OverkizCommand]
COMMANDS_OPEN: list[OverkizCommand]
COMMANDS_OPEN_TILT: list[OverkizCommand]
COMMANDS_CLOSE: list[OverkizCommand]
COMMANDS_CLOSE_TILT: list[OverkizCommand]
COMMANDS_SET_TILT_POSITION: list[OverkizCommand]

class OverkizGenericCover(OverkizEntity, CoverEntity):
    @property
    def current_cover_tilt_position(self) -> Union[int, None]: ...
    async def async_set_cover_tilt_position(self, **kwargs: Any) -> None: ...
    @property
    def is_closed(self) -> Union[bool, None]: ...
    async def async_open_cover_tilt(self, **kwargs: Any) -> None: ...
    async def async_close_cover_tilt(self, **kwargs: Any) -> None: ...
    async def async_stop_cover(self, **kwargs: Any) -> None: ...
    async def async_stop_cover_tilt(self, **kwargs: Any) -> None: ...
    @property
    def is_opening(self) -> Union[bool, None]: ...
    @property
    def is_closing(self) -> Union[bool, None]: ...
    @property
    def extra_state_attributes(self) -> Union[Mapping[str, Any], None]: ...
    @property
    def supported_features(self) -> int: ...
