from .const import DOMAIN as DOMAIN
from collections.abc import Mapping
from homeassistant.components.webhook import async_generate_id as async_generate_id
from homeassistant.config_entries import ConfigFlow as ConfigFlow, ConfigFlowResult as ConfigFlowResult, SOURCE_USER as SOURCE_USER
from homeassistant.const import CONF_API_KEY as CONF_API_KEY, CONF_HOST as CONF_HOST, CONF_PORT as CONF_PORT, CONF_SSL as CONF_SSL, CONF_URL as CONF_URL, CONF_WEBHOOK_ID as CONF_WEBHOOK_ID
from homeassistant.helpers.aiohttp_client import async_get_clientsession as async_get_clientsession
from typing import Any

class OverseerrConfigFlow(ConfigFlow, domain=DOMAIN):
    async def _check_connection(self, host: str, port: int, ssl: bool, api_key: str) -> str | None: ...
    async def async_step_user(self, user_input: dict[str, Any] | None = None) -> ConfigFlowResult: ...
    async def async_step_reauth(self, user_input: Mapping[str, Any]) -> ConfigFlowResult: ...
    async def async_step_reauth_confirm(self, user_input: dict[str, Any] | None = None) -> ConfigFlowResult: ...
    async def async_step_reconfigure(self, user_input: Mapping[str, Any]) -> ConfigFlowResult: ...
