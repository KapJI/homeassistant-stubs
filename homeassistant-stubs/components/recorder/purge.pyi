from . import Recorder as Recorder
from .const import MAX_ROWS_TO_PURGE as MAX_ROWS_TO_PURGE
from .models import Events as Events, RecorderRuns as RecorderRuns, StateAttributes as StateAttributes, States as States, StatisticsRuns as StatisticsRuns, StatisticsShortTerm as StatisticsShortTerm
from .repack import repack_database as repack_database
from .util import retryable_database_job as retryable_database_job, session_scope as session_scope
from _typeshed import Incomplete
from collections.abc import Callable as Callable, Iterable
from datetime import datetime
from homeassistant.const import EVENT_STATE_CHANGED as EVENT_STATE_CHANGED
from sqlalchemy.orm.session import Session as Session
from sqlalchemy.sql.lambdas import StatementLambdaElement as StatementLambdaElement
from sqlalchemy.sql.selectable import Select as Select

_LOGGER: Incomplete

def purge_old_data(instance: Recorder, purge_before: datetime, repack: bool, apply_filter: bool = ...) -> bool: ...
def _select_event_state_and_attributes_ids_to_purge(session: Session, purge_before: datetime) -> tuple[set[int], set[int], set[int]]: ...
def _state_attrs_exist(attr: Union[int, None]) -> Select: ...
def _generate_find_attr_lambda(attr1: int, attr2: Union[int, None], attr3: Union[int, None], attr4: Union[int, None], attr5: Union[int, None], attr6: Union[int, None], attr7: Union[int, None], attr8: Union[int, None], attr9: Union[int, None], attr10: Union[int, None], attr11: Union[int, None], attr12: Union[int, None], attr13: Union[int, None], attr14: Union[int, None], attr15: Union[int, None], attr16: Union[int, None], attr17: Union[int, None], attr18: Union[int, None], attr19: Union[int, None], attr20: Union[int, None], attr21: Union[int, None], attr22: Union[int, None], attr23: Union[int, None], attr24: Union[int, None], attr25: Union[int, None], attr26: Union[int, None], attr27: Union[int, None], attr28: Union[int, None], attr29: Union[int, None], attr30: Union[int, None], attr31: Union[int, None], attr32: Union[int, None], attr33: Union[int, None], attr34: Union[int, None], attr35: Union[int, None], attr36: Union[int, None], attr37: Union[int, None], attr38: Union[int, None], attr39: Union[int, None], attr40: Union[int, None], attr41: Union[int, None], attr42: Union[int, None], attr43: Union[int, None], attr44: Union[int, None], attr45: Union[int, None], attr46: Union[int, None], attr47: Union[int, None], attr48: Union[int, None], attr49: Union[int, None], attr50: Union[int, None], attr51: Union[int, None], attr52: Union[int, None], attr53: Union[int, None], attr54: Union[int, None], attr55: Union[int, None], attr56: Union[int, None], attr57: Union[int, None], attr58: Union[int, None], attr59: Union[int, None], attr60: Union[int, None], attr61: Union[int, None], attr62: Union[int, None], attr63: Union[int, None], attr64: Union[int, None], attr65: Union[int, None], attr66: Union[int, None], attr67: Union[int, None], attr68: Union[int, None], attr69: Union[int, None], attr70: Union[int, None], attr71: Union[int, None], attr72: Union[int, None], attr73: Union[int, None], attr74: Union[int, None], attr75: Union[int, None], attr76: Union[int, None], attr77: Union[int, None], attr78: Union[int, None], attr79: Union[int, None], attr80: Union[int, None], attr81: Union[int, None], attr82: Union[int, None], attr83: Union[int, None], attr84: Union[int, None], attr85: Union[int, None], attr86: Union[int, None], attr87: Union[int, None], attr88: Union[int, None], attr89: Union[int, None], attr90: Union[int, None], attr91: Union[int, None], attr92: Union[int, None], attr93: Union[int, None], attr94: Union[int, None], attr95: Union[int, None], attr96: Union[int, None], attr97: Union[int, None], attr98: Union[int, None], attr99: Union[int, None], attr100: Union[int, None]) -> StatementLambdaElement: ...
def _select_unused_attributes_ids(session: Session, attributes_ids: set[int], using_sqlite: bool) -> set[int]: ...
def _select_statistics_runs_to_purge(session: Session, purge_before: datetime) -> list[int]: ...
def _select_short_term_statistics_to_purge(session: Session, purge_before: datetime) -> list[int]: ...
def _purge_state_ids(instance: Recorder, session: Session, state_ids: set[int]) -> None: ...
def _evict_purged_states_from_old_states_cache(instance: Recorder, purged_state_ids: set[int]) -> None: ...
def _evict_purged_attributes_from_attributes_cache(instance: Recorder, purged_attributes_ids: set[int]) -> None: ...
def _purge_attributes_ids(instance: Recorder, session: Session, attributes_ids: set[int]) -> None: ...
def _purge_statistics_runs(session: Session, statistics_runs: list[int]) -> None: ...
def _purge_short_term_statistics(session: Session, short_term_statistics: list[int]) -> None: ...
def _purge_event_ids(session: Session, event_ids: Iterable[int]) -> None: ...
def _purge_old_recorder_runs(instance: Recorder, session: Session, purge_before: datetime) -> None: ...
def _purge_filtered_data(instance: Recorder, session: Session) -> bool: ...
def _purge_filtered_states(instance: Recorder, session: Session, excluded_entity_ids: list[str], using_sqlite: bool) -> None: ...
def _purge_filtered_events(instance: Recorder, session: Session, excluded_event_types: list[str]) -> None: ...
def purge_entity_data(instance: Recorder, entity_filter: Callable[[str], bool]) -> bool: ...
