import logging
from .const import MAX_QUEUE_BACKLOG as MAX_QUEUE_BACKLOG
from .statistics import async_add_external_statistics as async_add_external_statistics, async_import_statistics as async_import_statistics, list_statistic_ids as list_statistic_ids, validate_statistics as validate_statistics
from .util import async_migration_in_progress as async_migration_in_progress, async_migration_is_live as async_migration_is_live, get_instance as get_instance
from homeassistant.components import websocket_api as websocket_api
from homeassistant.core import HomeAssistant as HomeAssistant, callback as callback, valid_entity_id as valid_entity_id

_LOGGER: logging.Logger

def async_setup(hass: HomeAssistant) -> None: ...
async def ws_validate_statistics(hass: HomeAssistant, connection: websocket_api.ActiveConnection, msg: dict) -> None: ...
def ws_clear_statistics(hass: HomeAssistant, connection: websocket_api.ActiveConnection, msg: dict) -> None: ...
async def ws_get_statistics_metadata(hass: HomeAssistant, connection: websocket_api.ActiveConnection, msg: dict) -> None: ...
def ws_update_statistics_metadata(hass: HomeAssistant, connection: websocket_api.ActiveConnection, msg: dict) -> None: ...
def ws_adjust_sum_statistics(hass: HomeAssistant, connection: websocket_api.ActiveConnection, msg: dict) -> None: ...
def ws_import_statistics(hass: HomeAssistant, connection: websocket_api.ActiveConnection, msg: dict) -> None: ...
def ws_info(hass: HomeAssistant, connection: websocket_api.ActiveConnection, msg: dict) -> None: ...
async def ws_backup_start(hass: HomeAssistant, connection: websocket_api.ActiveConnection, msg: dict) -> None: ...
async def ws_backup_end(hass: HomeAssistant, connection: websocket_api.ActiveConnection, msg: dict) -> None: ...
