from .const import DOMAIN as DOMAIN
from .models import IssueSeverity as IssueSeverity, RepairsFlow as RepairsFlow, RepairsProtocol as RepairsProtocol
from homeassistant import data_entry_flow as data_entry_flow
from homeassistant.core import HomeAssistant as HomeAssistant, callback as callback
from homeassistant.exceptions import HomeAssistantError as HomeAssistantError
from homeassistant.helpers.integration_platform import async_process_integration_platforms as async_process_integration_platforms
from homeassistant.util.async_ import run_callback_threadsafe as run_callback_threadsafe
from typing import Any

class RepairsFlowManager(data_entry_flow.FlowManager):
    async def async_create_flow(self, handler_key: Any, *, context: Union[dict[str, Any], None] = ..., data: Union[dict[str, Any], None] = ...) -> RepairsFlow: ...
    async def async_finish_flow(self, flow: data_entry_flow.FlowHandler, result: data_entry_flow.FlowResult) -> data_entry_flow.FlowResult: ...

def async_setup(hass: HomeAssistant) -> None: ...
async def async_process_repairs_platforms(hass: HomeAssistant) -> None: ...
async def _register_repairs_platform(hass: HomeAssistant, integration_domain: str, platform: RepairsProtocol) -> None: ...
def async_create_issue(hass: HomeAssistant, domain: str, issue_id: str, *, issue_domain: Union[str, None] = ..., breaks_in_ha_version: Union[str, None] = ..., is_fixable: bool, learn_more_url: Union[str, None] = ..., severity: IssueSeverity, translation_key: str, translation_placeholders: Union[dict[str, str], None] = ...) -> None: ...
def create_issue(hass: HomeAssistant, domain: str, issue_id: str, *, breaks_in_ha_version: Union[str, None] = ..., is_fixable: bool, learn_more_url: Union[str, None] = ..., severity: IssueSeverity, translation_key: str, translation_placeholders: Union[dict[str, str], None] = ...) -> None: ...
def async_delete_issue(hass: HomeAssistant, domain: str, issue_id: str) -> None: ...
def delete_issue(hass: HomeAssistant, domain: str, issue_id: str) -> None: ...
def async_ignore_issue(hass: HomeAssistant, domain: str, issue_id: str, ignore: bool) -> None: ...
