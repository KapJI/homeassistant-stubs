from . import ShellyDeviceWrapper as ShellyDeviceWrapper
from .const import COAP as COAP, DATA_CONFIG_ENTRY as DATA_CONFIG_ENTRY, DOMAIN as DOMAIN
from .entity import ShellyBlockEntity as ShellyBlockEntity
from aioshelly import Block as Block
from homeassistant.components.cover import ATTR_POSITION as ATTR_POSITION, CoverEntity as CoverEntity, DEVICE_CLASS_SHUTTER as DEVICE_CLASS_SHUTTER, SUPPORT_CLOSE as SUPPORT_CLOSE, SUPPORT_OPEN as SUPPORT_OPEN, SUPPORT_SET_POSITION as SUPPORT_SET_POSITION, SUPPORT_STOP as SUPPORT_STOP
from homeassistant.config_entries import ConfigEntry as ConfigEntry
from homeassistant.core import HomeAssistant as HomeAssistant, callback as callback
from homeassistant.helpers.entity_platform import AddEntitiesCallback as AddEntitiesCallback
from typing import Any

async def async_setup_entry(hass: HomeAssistant, config_entry: ConfigEntry, async_add_entities: AddEntitiesCallback) -> None: ...

class ShellyCover(ShellyBlockEntity, CoverEntity):
    _attr_device_class: Any
    control_result: Any
    _supported_features: Any
    def __init__(self, wrapper: ShellyDeviceWrapper, block: Block) -> None: ...
    @property
    def is_closed(self) -> bool: ...
    @property
    def current_cover_position(self) -> int: ...
    @property
    def is_closing(self) -> bool: ...
    @property
    def is_opening(self) -> bool: ...
    @property
    def supported_features(self) -> int: ...
    async def async_close_cover(self, **kwargs: Any) -> None: ...
    async def async_open_cover(self, **kwargs: Any) -> None: ...
    async def async_set_cover_position(self, **kwargs: Any) -> None: ...
    async def async_stop_cover(self, **_kwargs: Any) -> None: ...
    def _update_callback(self) -> None: ...
