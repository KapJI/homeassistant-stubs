from . import VelbusEntity as VelbusEntity
from .const import DOMAIN as DOMAIN
from _typeshed import Incomplete
from homeassistant.components.cover import ATTR_POSITION as ATTR_POSITION, CoverEntity as CoverEntity, CoverEntityFeature as CoverEntityFeature
from homeassistant.config_entries import ConfigEntry as ConfigEntry
from homeassistant.core import HomeAssistant as HomeAssistant
from homeassistant.helpers.entity_platform import AddEntitiesCallback as AddEntitiesCallback
from typing import Any
from velbusaio.channels import Blind as VelbusBlind

async def async_setup_entry(hass: HomeAssistant, entry: ConfigEntry, async_add_entities: AddEntitiesCallback) -> None: ...

class VelbusCover(VelbusEntity, CoverEntity):
    _channel: VelbusBlind
    _attr_supported_features: Incomplete
    def __init__(self, channel: VelbusBlind) -> None: ...
    @property
    def is_closed(self) -> Union[bool, None]: ...
    @property
    def current_cover_position(self) -> Union[int, None]: ...
    async def async_open_cover(self, **kwargs: Any) -> None: ...
    async def async_close_cover(self, **kwargs: Any) -> None: ...
    async def async_stop_cover(self, **kwargs: Any) -> None: ...
    async def async_set_cover_position(self, **kwargs: Any) -> None: ...
