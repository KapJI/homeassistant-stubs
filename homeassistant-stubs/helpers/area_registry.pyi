from .typing import HomeAssistantType as HomeAssistantType
from homeassistant.core import callback as callback
from homeassistant.loader import bind_hass as bind_hass
from homeassistant.util import slugify as slugify
from typing import Any, Container, Iterable, Optional

DATA_REGISTRY: str
EVENT_AREA_REGISTRY_UPDATED: str
STORAGE_KEY: str
STORAGE_VERSION: int
SAVE_DELAY: int

class AreaEntry:
    name: str = ...
    normalized_name: str = ...
    id: Optional[str] = ...
    def generate_id(self, existing_ids: Container[str]) -> None: ...
    def __init__(self, name: Any, normalized_name: Any, id: Any) -> None: ...
    def __lt__(self, other: Any) -> Any: ...
    def __le__(self, other: Any) -> Any: ...
    def __gt__(self, other: Any) -> Any: ...
    def __ge__(self, other: Any) -> Any: ...

class AreaRegistry:
    hass: Any = ...
    areas: Any = ...
    def __init__(self, hass: HomeAssistantType) -> None: ...
    def async_get_area(self, area_id: str) -> Optional[AreaEntry]: ...
    def async_get_area_by_name(self, name: str) -> Optional[AreaEntry]: ...
    def async_list_areas(self) -> Iterable[AreaEntry]: ...
    def async_get_or_create(self, name: str) -> AreaEntry: ...
    def async_create(self, name: str) -> AreaEntry: ...
    def async_delete(self, area_id: str) -> None: ...
    def async_update(self, area_id: str, name: str) -> AreaEntry: ...
    async def async_load(self) -> None: ...
    def async_schedule_save(self) -> None: ...

def async_get(hass: HomeAssistantType) -> AreaRegistry: ...
async def async_load(hass: HomeAssistantType) -> None: ...
async def async_get_registry(hass: HomeAssistantType) -> AreaRegistry: ...
def normalize_area_name(area_name: str) -> str: ...
