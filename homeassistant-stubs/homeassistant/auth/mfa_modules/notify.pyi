import voluptuous as vol
from . import MULTI_FACTOR_AUTH_MODULES as MULTI_FACTOR_AUTH_MODULES, MULTI_FACTOR_AUTH_MODULE_SCHEMA as MULTI_FACTOR_AUTH_MODULE_SCHEMA, MultiFactorAuthModule as MultiFactorAuthModule, SetupFlow as SetupFlow
from homeassistant.const import CONF_EXCLUDE as CONF_EXCLUDE, CONF_INCLUDE as CONF_INCLUDE
from homeassistant.core import HomeAssistant as HomeAssistant, callback as callback
from homeassistant.exceptions import ServiceNotFound as ServiceNotFound
from typing import Any, Dict, List, Optional

REQUIREMENTS: Any
CONF_MESSAGE: str
CONFIG_SCHEMA: Any
STORAGE_VERSION: int
STORAGE_KEY: str
STORAGE_USERS: str
STORAGE_USER_ID: str
INPUT_FIELD_CODE: str

class NotifySetting:
    secret: str = ...
    counter: int = ...
    notify_service: Optional[str] = ...
    target: Optional[str] = ...
    def __init__(self, secret: Any, counter: Any, notify_service: Any, target: Any) -> None: ...
    def __lt__(self, other: Any) -> Any: ...
    def __le__(self, other: Any) -> Any: ...
    def __gt__(self, other: Any) -> Any: ...
    def __ge__(self, other: Any) -> Any: ...

class NotifyAuthModule(MultiFactorAuthModule):
    DEFAULT_TITLE: str = ...
    def __init__(self, hass: HomeAssistant, config: Dict[str, Any]) -> None: ...
    @property
    def input_schema(self) -> vol.Schema: ...
    def aync_get_available_notify_services(self) -> List[str]: ...
    async def async_setup_flow(self, user_id: str) -> SetupFlow: ...
    async def async_setup_user(self, user_id: str, setup_data: Any) -> Any: ...
    async def async_depose_user(self, user_id: str) -> None: ...
    async def async_is_user_setup(self, user_id: str) -> bool: ...
    async def async_validate(self, user_id: str, user_input: Dict[str, Any]) -> bool: ...
    async def async_initialize_login_mfa_step(self, user_id: str) -> None: ...
    async def async_notify_user(self, user_id: str, code: str) -> None: ...
    async def async_notify(self, code: str, notify_service: str, target: Optional[str]=...) -> None: ...

class NotifySetupFlow(SetupFlow):
    def __init__(self, auth_module: NotifyAuthModule, setup_schema: vol.Schema, user_id: str, available_notify_services: List[str]) -> None: ...
    async def async_step_init(self, user_input: Optional[Dict[str, str]]=...) -> Dict[str, Any]: ...
    async def async_step_setup(self, user_input: Optional[Dict[str, str]]=...) -> Dict[str, Any]: ...
