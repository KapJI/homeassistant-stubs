import datetime as dt
from homeassistant.const import MATCH_ALL as MATCH_ALL
from typing import Any, List, Optional, Union

DATE_STR_FORMAT: str
NATIVE_UTC: Any
UTC: Any
DEFAULT_TIME_ZONE: dt.tzinfo
DATETIME_RE: Any

def set_default_time_zone(time_zone: dt.tzinfo) -> None: ...
def get_time_zone(time_zone_str: str) -> Optional[dt.tzinfo]: ...
def utcnow() -> dt.datetime: ...
def now(time_zone: Optional[dt.tzinfo]=...) -> dt.datetime: ...
def as_utc(dattim: dt.datetime) -> dt.datetime: ...
def as_timestamp(dt_value: dt.datetime) -> float: ...
def as_local(dattim: dt.datetime) -> dt.datetime: ...
def utc_from_timestamp(timestamp: float) -> dt.datetime: ...
def start_of_local_day(dt_or_d: Union[dt.date, dt.datetime, None]=...) -> dt.datetime: ...
def parse_datetime(dt_str: str) -> Optional[dt.datetime]: ...
def parse_date(dt_str: str) -> Optional[dt.date]: ...
def parse_time(time_str: str) -> Optional[dt.time]: ...
def get_age(date: dt.datetime) -> str: ...
def parse_time_expression(parameter: Any, min_value: int, max_value: int) -> List[int]: ...
def find_next_time_expression_time(now: dt.datetime, seconds: List[int], minutes: List[int], hours: List[int]) -> dt.datetime: ...
