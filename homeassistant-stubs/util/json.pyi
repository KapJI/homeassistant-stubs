import json
from homeassistant.core import Event as Event, State as State
from homeassistant.exceptions import HomeAssistantError as HomeAssistantError
from typing import Any, Callable, Dict, List, Optional, Type, Union

class SerializationError(HomeAssistantError): ...
class WriteError(HomeAssistantError): ...

def load_json(filename: str, default: Union[List, Dict, None]=...) -> Union[List, Dict]: ...
def save_json(filename: str, data: Union[List, Dict], private: bool=..., *, encoder: Optional[Type[json.JSONEncoder]]=...) -> None: ...
def format_unserializable_data(data: Dict[str, Any]) -> str: ...
def find_paths_unserializable_data(bad_data: Any, *, dump: Callable[[Any], str]=...) -> Dict[str, Any]: ...
