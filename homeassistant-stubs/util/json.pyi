import json
from .file import write_utf8_file as write_utf8_file, write_utf8_file_atomic as write_utf8_file_atomic
from _typeshed import Incomplete
from collections.abc import Callable as Callable
from homeassistant.core import Event as Event, State as State
from homeassistant.exceptions import HomeAssistantError as HomeAssistantError
from typing import Any

_LOGGER: Incomplete

class SerializationError(HomeAssistantError): ...
class WriteError(HomeAssistantError): ...

def load_json(filename: str, default: Union[list, dict, None] = ...) -> Union[list, dict]: ...
def save_json(filename: str, data: Union[list, dict], private: bool = ..., *, encoder: Union[type[json.JSONEncoder], None] = ..., atomic_writes: bool = ...) -> None: ...
def format_unserializable_data(data: dict[str, Any]) -> str: ...
def find_paths_unserializable_data(bad_data: Any, *, dump: Callable[[Any], str] = ...) -> dict[str, Any]: ...
