import yaml
from .const import SECRET_YAML as SECRET_YAML
from .objects import Input as Input, NodeListClass as NodeListClass, NodeStrClass as NodeStrClass
from homeassistant.exceptions import HomeAssistantError as HomeAssistantError
from pathlib import Path
from typing import Any, Dict, List, TextIO, TypeVar, Union

JSON_TYPE = Union[List, Dict, str]
DICT_T = TypeVar('DICT_T', bound=Dict)

class Secrets:
    config_dir: Any = ...
    def __init__(self, config_dir: Path) -> None: ...
    def get(self, requester_path: str, secret: str) -> str: ...

class SafeLineLoader(yaml.SafeLoader):
    secrets: Any = ...
    def __init__(self, stream: Any, secrets: Union[Secrets, None]=...) -> None: ...
    def compose_node(self, parent: yaml.nodes.Node, index: int) -> yaml.nodes.Node: ...

def load_yaml(fname: str, secrets: Union[Secrets, None]=...) -> JSON_TYPE: ...
def parse_yaml(content: Union[str, TextIO], secrets: Union[Secrets, None]=...) -> JSON_TYPE: ...
def secret_yaml(loader: SafeLineLoader, node: yaml.nodes.Node) -> JSON_TYPE: ...
