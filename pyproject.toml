[tool.poetry]
name = "homeassistant-stubs"
version = "2024.9.2"
description = "PEP 484 typing stubs for Home Assistant Core"
authors = ["Ruslan Sayfutdinov <ruslan@sayfutdinov.com>"]
license = "MIT"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development",
    "Typing :: Typed",
]
keywords = ["homeassistant", "typing", "pep484"]
readme = "README.md"
homepage = "https://github.com/KapJI/homeassistant-stubs"
repository = "https://github.com/KapJI/homeassistant-stubs"
packages = [
    { include = "homeassistant-stubs" },
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/KapJI/homeassistant-stubs/issues"
"Release Notes" = "https://github.com/KapJI/homeassistant-stubs/releases"

[tool.poetry.dependencies]
# Forbid 3.13 because of home-assistant-bluetooth package.
python = ">=3.12,<3.13"
homeassistant = "2024.9.2"

[tool.poetry.group.dev.dependencies]
awesomeversion = ">=21.11.0"
codespell = "^2.2.4"
# mypy = "^1.9"
# Include https://github.com/python/mypy/pull/17663 before new version is released
mypy = { git = "https://github.com/python/mypy.git", rev = "5b46f1c4baeb6271cbf3fc4ab57f8d78b0232e3f" }
pre-commit = "^3.2.1"
pylint = ">=2.17.1,<4.0.0"
PyGithub = ">=1.58,<3.0"
ruff = "^0.6.4"
types-requests = "^2.28.11"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pylint.format]
max-line-length = 88
jobs = 2

[tool.pylint.basic]
good-names = ["ex", "fp", "i"]

[tool.pylint.messages_control]
disable = [
    "duplicate-code",
    "format",
    "invalid-unary-operand-type",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-locals",
    "too-many-return-statements",
    "too-many-statements",
    "wrong-import-order",
    "consider-using-namedtuple-or-dataclass",
    "consider-using-assignment-expr",
]

[tool.pylint.main]
py-version = "3.12"
load-plugins = [
    "pylint.extensions.code_style",
    "pylint.extensions.typing",
]

[tool.pylint.typing]
runtime-typing = false

[tool.pylint.code_style]
max-line-length-suggestions = 72

[tool.ruff]
required-version = ">=0.6.0"
target-version = "py39"

[tool.ruff.lint]
select = [
    "A001", # Variable {name} is shadowing a Python builtin
    "ASYNC", # flake8-async
    "B", # flake8-bugbear
    "BLE",
    "C", # complexity, including flake8-comprehensions
    "COM818", # Trailing comma on bare tuple prohibited
    "D", # flake8-docstrings
    "DTZ003", # Use datetime.now(tz=) instead of datetime.utcnow()
    "DTZ004", # Use datetime.fromtimestamp(ts, tz=) instead of datetime.utcfromtimestamp(ts)
    "E", # pycodestyle
    "F", # pyflakes/autoflake
    "FLY", # flynt
    "FURB", # refurb
    "G", # flake8-logging-format
    "I", # isort
    "INP", # flake8-no-pep420
    "ISC", # flake8-implicit-str-concat
    "ICN001", # import concentions; {name} should be imported as {asname}
    "LOG", # flake8-logging
    "N804", # First argument of a class method should be named cls
    "N805", # First argument of a method should be named self
    "N815", # Variable {name} in class scope should not be mixedCase
    "PERF", # Perflint
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL", # pylint
    "PT", # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "PYI", # flake8-pyi
    "RET", # flake8-return
    "RSE", # flake8-raise
    "RUF005", # Consider iterable unpacking instead of concatenation
    "RUF006", # Store a reference to the return value of asyncio.create_task
    "RUF010", # Use explicit conversion flag
    "RUF013", # PEP 484 prohibits implicit Optional
    "RUF017", # Avoid quadratic list summation
    "RUF018", # Avoid assignment expressions in assert statements
    "RUF019", # Unnecessary key check before dictionary access
    # "RUF100", # Unused `noqa` directive; temporarily every now and then to clean them up
    "S102", # Use of exec detected
    "S103", # bad-file-permissions
    "S108", # hardcoded-temp-file
    "S306", # suspicious-mktemp-usage
    "S307", # suspicious-eval-usage
    "S313", # suspicious-xmlc-element-tree-usage
    "S314", # suspicious-xml-element-tree-usage
    "S315", # suspicious-xml-expat-reader-usage
    "S316", # suspicious-xml-expat-builder-usage
    "S317", # suspicious-xml-sax-usage
    "S318", # suspicious-xml-mini-dom-usage
    "S319", # suspicious-xml-pull-dom-usage
    "S320", # suspicious-xmle-tree-usage
    "S601", # paramiko-call
    "S602", # subprocess-popen-with-shell-equals-true
    "S604", # call-with-shell-equals-true
    "S608", # hardcoded-sql-expression
    "S609", # unix-command-wildcard-injection
    "SIM", # flake8-simplify
    "SLF", # flake8-self
    "SLOT", # flake8-slots
    "T100", # Trace found: {name} used
    "TCH", # flake8-type-checking
    "TID251", # Banned imports
    "TRY", # tryceratops
    "UP", # pyupgrade
    "W", # pycodestyle
]
ignore = [
    "D202", # No blank lines allowed after function docstring
    "D203", # 1 blank line required before class docstring
    "D213", # Multi-line docstring summary should start at the second line
    "PLR0911", # Too many return statements ({returns} > {max_returns})
    "PLR0912", # Too many branches ({branches} > {max_branches})
    "PLR0913", # Too many arguments to function call ({c_args} > {max_args})
    "PLR0915", # Too many statements ({statements} > {max_statements})
    "PLW2901", # Outer {outer_kind} variable {name} overwritten by inner {inner_kind} target
    "TRY003", # Avoid specifying long messages outside the exception class
    # May conflict with the formatter, https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q",
    "COM812",
    "COM819",
    "ISC001",
]

[tool.ruff.lint.isort]
force-sort-within-sections = true
combine-as-imports = true
split-on-trailing-comma = false

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.mccabe]
max-complexity = 25

[tool.mypy]
python_version = "3.12"
show_error_codes = true
strict = true
disallow_any_explicit = true
disallow_any_unimported = true
show_none_errors = true
warn_no_return = true
warn_unreachable = true

[tool.codespell]
quiet-level = 2
skip = "poetry.lock,./.git/*,./.mypy_cache/*,./.venv/*,./dist/*,./env/*,*.egg-info,./homeassistant_core/*,./homeassistant-stubs/*"
ignore-words-list = "hass"
